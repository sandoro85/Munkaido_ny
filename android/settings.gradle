pluginManagement {
    def reactNativeRoot = new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim()).getParentFile()
    def pluginPath = new File(["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json')"].execute(null, rootDir).text.trim()).getParentFile()
    includeBuild(pluginPath.toString())
}

plugins {
    id 'com.facebook.react.settings' version '0.73.7'
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
    if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
        ex.autolinkLibrariesFromCommand()
    } else {
        def command = [
            'node',
            '--no-warnings',
            '--eval',
            'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
            'react-native-config',
            '--json',
            '--platform',
            'android'
        ]
        ex.autolinkLibrariesFromCommand(command)
    }
}

rootProject.name = 'Munkaid≈ë'

dependencyResolutionManagement {
    versionCatalogs {
        reactAndroidLibs {
            def reactNativePath = new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim())
            from(files(new File(reactNativePath.getParentFile(), "../gradle/libs.versions.toml")))
        }
    }
}

apply from: new File(["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim(), "../scripts/autolinking.gradle")
useExpoModules()

include ':app'
